Microchip MPLAB XC8 Compiler V2.31

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.31\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\Snake.X.production.sym \
  --cmf=dist/default/production\Snake.X.production.cmf -z -Q16F887 \
  -oC:\Users\brand\AppData\Local\Temp\sesc.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Snake.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 -DCODE=2 \
  -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -k C:\Users\brand\AppData\Local\Temp\sesc.o \
  dist/default/production\Snake.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\brand\AppData\Local\Temp\sesc.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\Snake.X.production.o
                cinit                                15       15       1A        8       0
                intentry                              4        4        E        8       0
                config                             2007     2007        2        0       4
                text14                              5E0      5E0       46        8       0
                text13                              599      599       47        8       0
                text12                              626      626       34        8       0
                text11                              3FC      3FC       60        8       0
                text10                              397      397       65        8       0
                text9                               332      332       65        8       0
                text8                                2F       2F      14A        8       0
                text7                               65A      65A       1F        8       0
                text6                               4B3      4B3       57        8       0
                text5                               45C      45C       57        8       0
                text4                               50A      50A       48        8       0
                text3                               552      552       47        8       0
                text2                               68C      68C        9        8       0
                text1                               287      287       AB        8       0
                maintext                            179      179      10E        8       0
                cstackBANK0                          20       20       21       20       1
                cstackCOMMON                         70       70        E       70       1
                cstackBANK1                          A0       A0        3       A0       1
                clrtext                             69D      69D        8        8       0
                inittext                            679      679       13        8       0
                dataBANK0                            5A       5A        8       20       1
                bssBANK0                             41       41       19       20       1
                nvBANK0                              62       62        2       20       1
                idataBANK0                          695      695        8        8       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       1A         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text14                              5E0      5E0       46         0
                text13                              599      599       47         0
                text12                              626      626       34         0
                text11                              3FC      3FC       60         0
                text10                              397      397       65         0
                text9                               332      332       65         0
                text8                                2F       2F      14A         0
                text7                               65A      65A       1F         0
                text6                               4B3      4B3       57         0
                text5                               45C      45C       57         0
                text4                               50A      50A       48         0
                text3                               552      552       47         0
                text2                               68C      68C        9         0
                text1                               287      287       AB         0
                maintext                            179      179      10E         0
                clrtext                             69D      69D        8         0
                inittext                            679      679       13         0
                idataBANK0                          695      695        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        E         1

        CLASS   BANK0          
                cstackBANK0                          20       20       21         1
                dataBANK0                            5A       5A        8         1
                bssBANK0                             41       41       19         1
                nvBANK0                              62       62        2         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0        3         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  0006A1  0006A5         8       0  CODE        2
                cstackBANK0                    000020  000044  000064        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                cstackBANK1                    0000A0  000003  0000A3        A0       1  BANK1       1


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0064-006F              C           1
        BANK1            00A3-00EF             4D           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         06A5-1FFF            800
        CONST            0003-0003              1           2
                         06A5-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         06A5-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0064-006F              C           1
                         00A3-00EF             4D
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         06A5-1FFF           195B
        STRING           0003-0003              1           2
                         06A5-1FFF            100

                                  Symbol Table

?___lmul                 cstackBANK0  002C
?_rand                   cstackBANK0  0039
?i1___lmul               cstackCOMMON 0070
?i1_rand                 cstackBANK0  0020
_ANSEL                   (abs)        0188
_ANSELH                  (abs)        0189
_INTCONbits              (abs)        000B
_IOCB                    (abs)        0096
_IOCB_interrupt          text11       03FC
_OPTION_REGbits          (abs)        0081
_OSCCONbits              (abs)        008F
_PORTA                   (abs)        0005
_PORTAbits               (abs)        0005
_PORTB                   (abs)        0006
_PORTBbits               (abs)        0006
_PORTC                   (abs)        0007
_PORTCbits               (abs)        0007
_PORTD                   (abs)        0008
_PORTDbits               (abs)        0008
_TMR0                    (abs)        0001
_TMR0_interrupt          text8        002F
_TRISA                   (abs)        0085
_TRISB                   (abs)        0086
_TRISC                   (abs)        0087
_TRISD                   (abs)        0088
_WPUB                    (abs)        0095
__Habs1                  abs1         0000
__Hbank0                 bank0        0000
__Hbank1                 bank1        0000
__Hbank2                 bank2        0000
__Hbank3                 bank3        0000
__HbssBANK0              bssBANK0     0000
__Hcinit                 cinit        002F
__Hclrtext               clrtext      0000
__Hcode                  code         0000
__Hcommon                common       0000
__Hconfig                config       2009
__HcstackBANK0           cstackBANK0  0000
__HcstackBANK1           cstackBANK1  0000
__HcstackCOMMON          cstackCOMMON 0000
__HdataBANK0             dataBANK0    0000
__Heeprom_data           eeprom_data  0000
__Hend_init              end_init     0015
__Hfunctab               functab      0000
__HidataBANK0            idataBANK0   0000
__Hinit                  init         0012
__Hinittext              inittext     0000
__Hintentry              intentry     0012
__Hmaintext              maintext     0000
__HnvBANK0               nvBANK0      0000
__Hpowerup               powerup      0000
__Hram                   ram          0000
__Hreset_vec             reset_vec    0003
__Hsfr0                  sfr0         0000
__Hsfr1                  sfr1         0000
__Hsfr2                  sfr2         0000
__Hsfr3                  sfr3         0000
__Hspace_0               (abs)        06A5
__Hspace_1               (abs)        00A3
__Hspace_2               (abs)        0000
__Hspace_3               (abs)        0000
__Hspace_4               (abs)        4010
__Hstack                 stack        0000
__Hstrings               strings      0000
__Htext                  text         0000
__Labs1                  abs1         0000
__Lbank0                 bank0        0000
__Lbank1                 bank1        0000
__Lbank2                 bank2        0000
__Lbank3                 bank3        0000
__LbssBANK0              bssBANK0     0000
__Lcinit                 cinit        0015
__Lclrtext               clrtext      0000
__Lcode                  code         0000
__Lcommon                common       0000
__Lconfig                config       0000
__LcstackBANK0           cstackBANK0  0000
__LcstackBANK1           cstackBANK1  0000
__LcstackCOMMON          cstackCOMMON 0000
__LdataBANK0             dataBANK0    0000
__Leeprom_data           eeprom_data  0000
__Lend_init              end_init     0012
__Lfunctab               functab      0000
__LidataBANK0            idataBANK0   0000
__Linit                  init         0012
__Linittext              inittext     0000
__Lintentry              intentry     0004
__Lmaintext              maintext     0000
__LnvBANK0               nvBANK0      0000
__Lpowerup               powerup      0000
__Lram                   ram          0000
__Lreset_vec             reset_vec    0000
__Lsfr0                  sfr0         0000
__Lsfr1                  sfr1         0000
__Lsfr2                  sfr2         0000
__Lsfr3                  sfr3         0000
__Lspace_0               (abs)        0000
__Lspace_1               (abs)        0000
__Lspace_2               (abs)        0000
__Lspace_3               (abs)        0000
__Lspace_4               (abs)        0000
__Lstack                 stack        0000
__Lstrings               strings      0000
__Ltext                  text         0000
__S0                     (abs)        06A5
__S1                     (abs)        00A3
__S2                     (abs)        0000
__S3                     (abs)        0000
___int_sp                stack        0000
___latbits               (abs)        0002
___lmul                  text4        050A
___lmul@multiplicand     cstackBANK0  0030
___lmul@multiplier       cstackBANK0  002C
___lmul@product          cstackBANK0  0035
___sp                    stack        0000
___stackhi               (abs)        0000
___stacklo               (abs)        0000
__end_of_IOCB_interrupt  text11       045C
__end_of_TMR0_interrupt  text8        0179
__end_of___lmul          text4        0552
__end_of__initialization cinit        002B
__end_of_columnas        text6        050A
__end_of_filas           text5        04B3
__end_of_isr             text7        0679
__end_of_main            maintext     0287
__end_of_rand            text3        0599
__end_of_reiniciar       text12       065A
__end_of_setup           text1        0332
__end_of_srand           text2        0695
__end_ofi1___lmul        text14       0626
__end_ofi1_columnas      text10       03FC
__end_ofi1_filas         text9        0397
__end_ofi1_rand          text13       05E0
__initialization         cinit        0015
__pbssBANK0              bssBANK0     0041
__pcstackBANK0           cstackBANK0  0020
__pcstackBANK1           cstackBANK1  00A0
__pcstackCOMMON          cstackCOMMON 0070
__pdataBANK0             dataBANK0    005A
__pidataBANK0            idataBANK0   0695
__pintentry              intentry     0004
__pmaintext              maintext     0179
__pnvBANK0               nvBANK0      0062
__ptext1                 text1        0287
__ptext10                text10       0397
__ptext11                text11       03FC
__ptext12                text12       0626
__ptext13                text13       0599
__ptext14                text14       05E0
__ptext2                 text2        068C
__ptext3                 text3        0552
__ptext4                 text4        050A
__ptext5                 text5        045C
__ptext6                 text6        04B3
__ptext7                 text7        065A
__ptext8                 text8        002F
__ptext9                 text9        0332
__size_of_IOCB_interrupt (abs)        0000
__size_of_TMR0_interrupt (abs)        0000
__size_of___lmul         (abs)        0000
__size_of_columnas       (abs)        0000
__size_of_filas          (abs)        0000
__size_of_isr            (abs)        0000
__size_of_main           (abs)        0000
__size_of_rand           (abs)        0000
__size_of_reiniciar      (abs)        0000
__size_of_setup          (abs)        0000
__size_of_srand          (abs)        0000
__size_ofi1___lmul       (abs)        0000
__size_ofi1_columnas     (abs)        0000
__size_ofi1_filas        (abs)        0000
__size_ofi1_rand         (abs)        0000
_banderaMulti            bssBANK0     004F
_cColumna                dataBANK0    0060
_cFila                   dataBANK0    0061
_columnas                text6        04B3
_coso                    bssBANK0     0041
_downFlag                bssBANK0     0052
_end                     bssBANK0     0058
_filas                   text5        045C
_i                       bssBANK0     0045
_inicio                  bssBANK0     0059
_isr                     text7        065A
_leftFlag                bssBANK0     0051
_longitud                dataBANK0    005F
_main                    maintext     0179
_prevFlagDirec           bssBANK0     004D
_rand                    text3        0552
_randx                   dataBANK0    005A
_reiniciar               text12       0626
_rigthFlag               bssBANK0     0050
_semillaC                bssBANK0     0056
_semillaDown             bssBANK0     004B
_semillaF                bssBANK0     0057
_semillaLeft             bssBANK0     004A
_semillaRigth            bssBANK0     0049
_semillaUp               bssBANK0     004C
_setup                   text1        0287
_srand                   text2        068C
_upFlag                  bssBANK0     0053
_x                       nvBANK0      0062
btemp                    (abs)        007E
clear_ram0               clrtext      069D
columnas@columna         cstackBANK0  002F
columnas@value           cstackBANK0  002C
end_of_initialization    cinit        002B
filas@fila               cstackBANK0  002F
filas@value              cstackBANK0  002C
i1___lmul                text14       05E0
i1___lmul@multiplicand   cstackCOMMON 0074
i1___lmul@multiplier     cstackCOMMON 0070
i1___lmul@product        cstackCOMMON 0079
i1_columnas              text10       0397
i1_filas                 text9        0332
i1_rand                  text13       0599
i1columnas@columna       cstackCOMMON 0073
i1columnas@value         cstackCOMMON 0070
i1filas@fila             cstackCOMMON 0073
i1filas@value            cstackCOMMON 0070
init_fetch0              inittext     0679
init_ram0                inittext     067D
interrupt_function       intentry     0004
intlevel0                functab      0000
intlevel1                functab      0000
intlevel2                functab      0000
intlevel3                functab      0000
intlevel4                functab      0000
intlevel5                functab      0000
reset_vec                reset_vec    0000
saved_w                  (abs)        007E
srand@x                  cstackBANK0  002C
start                    init         0012
start_initialization     cinit        0015
wtemp0                   (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 113 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       3       0       0
      Totals:         0       0       3       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    8
 This function calls:
		_rand
		_setup
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _setup *****************
 Defined at:
		line 499 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    7
 This function calls:
		_columnas
		_filas
		_rand
		_srand
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _srand *****************
 Defined at:
		line 6 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
  x               2   12[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _rand *****************
 Defined at:
		line 12 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   25[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		___lmul
 This function is called by:
		_main
		_setup
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4   12[BANK0 ] unsigned long 
  multiplicand    4   16[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4   21[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  4   12[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      13       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_rand
 This function uses a non-reentrant model


 *************** function _filas *****************
 Defined at:
		line 418 in file "main.c"
 Parameters:    Size  Location     Type
  fila            1    wreg     unsigned char 
  value           1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  fila            1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _columnas *****************
 Defined at:
		line 449 in file "main.c"
 Parameters:    Size  Location     Type
  columna         1    wreg     unsigned char 
  value           1   12[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  columna         1   15[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		Nothing
 This function is called by:
		_setup
 This function uses a non-reentrant model


 *************** function _isr *****************
 Defined at:
		line 314 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_IOCB_interrupt
		_TMR0_interrupt
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _TMR0_interrupt *****************
 Defined at:
		line 242 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_columnas
		i1_filas
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function i1_filas *****************
 Defined at:
		line 418 in file "main.c"
 Parameters:    Size  Location     Type
  fila            1    wreg     unsigned char 
  value           1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  fila            1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_TMR0_interrupt
 This function uses a non-reentrant model


 *************** function i1_columnas *****************
 Defined at:
		line 449 in file "main.c"
 Parameters:    Size  Location     Type
  columna         1    wreg     unsigned char 
  value           1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  columna         1    3[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_TMR0_interrupt
 This function uses a non-reentrant model


 *************** function _IOCB_interrupt *****************
 Defined at:
		line 326 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       1       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_reiniciar
 This function is called by:
		_isr
 This function uses a non-reentrant model


 *************** function _reiniciar *****************
 Defined at:
		line 393 in file "main.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_rand
 This function is called by:
		_IOCB_interrupt
 This function uses a non-reentrant model


 *************** function i1_rand *****************
 Defined at:
		line 12 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\rand.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2    0[BANK0 ] int 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       5       0       0       0
      Totals:         0       7       0       0       0
Total ram usage:        7 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1___lmul
 This function is called by:
		_reiniciar
 This function uses a non-reentrant model


 *************** function i1___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4    0[COMMON] unsigned long 
  multiplicand    4    4[COMMON] unsigned long 
 Auto vars:     Size  Location     Type
  product         4    9[COMMON] unsigned long 
 Return value:  Size  Location     Type
                  4    0[COMMON] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         8       0       0       0       0
      Locals:         4       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:        13       0       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_rand
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\rand.c
		_srand         		CODE           	068C	0000	9
		_rand          		CODE           	0552	0000	71

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\rand.c estimated size: 80

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	050A	0000	72

C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul32.c estimated size: 72

shared
		i1_filas       		CODE           	0332	0000	101
		i1_rand        		CODE           	0599	0000	71
		i1_columnas    		CODE           	0397	0000	101
		__initialization		CODE           	0015	0000	22
		i1___lmul      		CODE           	05E0	0000	70

shared estimated size: 365

main.c
		_filas         		CODE           	045C	0000	87
		_main          		CODE           	0179	0000	270
		_columnas      		CODE           	04B3	0000	87
		_IOCB_interrupt		CODE           	03FC	0000	96
		_isr           		CODE           	065A	0000	31
		_TMR0_interrupt		CODE           	002F	0000	330
		_setup         		CODE           	0287	0000	171
		_reiniciar     		CODE           	0626	0000	52

main.c estimated size: 1124

